
D:/demo/x86os/build/source/kernel/kernel.elf:     file format elf32-i386
D:/demo/x86os/build/source/kernel/kernel.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010000

Program Header:
    LOAD off    0x00001000 vaddr 0x00010000 paddr 0x00010000 align 2**12
         filesz 0x00000014 memsz 0x00000014 flags r-x

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000014  00010000  00010000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_line   000000e7  00000000  00000000  00001014  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_info   0000015b  00000000  00000000  000010fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_abbrev 000000cb  00000000  00000000  00001256  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000040  00000000  00000000  00001328  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_str    0000014c  00000000  00000000  00001368  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      00000011  00000000  00000000  000014b4  2**0
                  CONTENTS, READONLY
  7 .debug_frame  00000034  00000000  00000000  000014c8  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00010000 l    d  .text	00000000 .text
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 init.c
0001000e g     F .text	00000006 kernel_init
00010000 g       .text	00000000 _start



Disassembly of section .text:

00010000 <_start>:
 */
	.text
	.extern kernel_init
	.global _start
_start:
	push %ebp
   10000:	55                   	push   %ebp
	mov %esp, %ebp
   10001:	89 e5                	mov    %esp,%ebp
	mov 0x8(%ebp), %eax
   10003:	8b 45 08             	mov    0x8(%ebp),%eax

	push %eax
   10006:	50                   	push   %eax
	call kernel_init
   10007:	e8 02 00 00 00       	call   1000e <kernel_init>
   1000c:	eb fe                	jmp    1000c <_start+0xc>

0001000e <kernel_init>:
 * @LastEditTime: 2022-09-07 14:04:45
 */
#include "init.h"
#include "comm/boot_info.h"

void kernel_init (boot_info_t *boot_info) {
   1000e:	55                   	push   %ebp
   1000f:	89 e5                	mov    %esp,%ebp
    
   10011:	90                   	nop
   10012:	5d                   	pop    %ebp
   10013:	c3                   	ret    
